#!/bin/bash




posix_2_posix="{{ posix_2_posix }}"
posix_2_os="{{ posix_2_os }}"
os_2_os="{{ os_2_os }}"
os_2_posix="{{ os_2_posix }}"

fpsync="{{ fpsync }}"
oci_parallel_transfer_tools="{{ oci_parallel_transfer_tools }}"
posix_all_tools="{{ posix_all_tools }}"
rclone="{{ rclone }}"
s5cmd="{{ s5cmd }}"
oci_cli="{{ oci_cli }}"
os_all_tools="{{ os_all_tools }}"

src_os_type="{{ src_os_type }}"
src_access_key_id="{{ src_access_key_id }}"
src_secret_access_key="{{ src_secret_access_key }}"
src_region="{{ src_region }}"
src_endpoint="{{ src_endpoint }}"
src_bucket_name="{{ src_bucket_name }}"

destination_os_type="{{ destination_os_type }}"
destination_access_key_id="{{ destination_access_key_id }}"
destination_secret_access_key="{{ destination_secret_access_key }}"
destination_region="{{ destination_region }}"
destination_endpoint="{{ destination_endpoint }}"
destination_bucket_name="{{ destination_bucket_name }}"


fpsync_shared_fs_dir={{ fpsync_shared_fs_dir }}
fpsync_shared_fs_tmp_dir={{ fpsync_shared_fs_tmp_dir }}
concurrent_sync_jobs=30
max_files_per_sync_job=900
# 1073741824 bytes = 1GiB
max_bytes_per_sync_job=1073741824
rsync_options="-lptgoD -v --numeric-ids "
rsync_options_ssh_pre='-e \\\"'
rsync_options_ssh_post=' \\\"'
rsync_options_ssh=" ssh -i {{ destination_fs_server_ssh_private_key_path }} "
rsync_options_all=" -o \" $rsync_options $rsync_options_ssh_pre $rsync_options_ssh $rsync_options_ssh_post \" "
ssh_with_key=$rsync_options_ssh

source_fs_directory_to_sync="{{ source_fs_directory_to_sync }}"
destination_fs_directory_to_sync="{{ destination_fs_directory_to_sync }}"
destination_location="{{ destination_fs_server_user }}@{{ destination_fs_server_ip }}:{{ destination_fs_directory_to_sync }}"
destination_host_with_user="{{ destination_fs_server_user }}@{{ destination_fs_server_ip }}"


# fpsync sample command
# time fpsync -w opc@hpc-node-1  -w opc@hpc-node-2 -w opc@hpc-node-3  -d /mnt/iad-ad-3-fss/fpsync_prototype -t /mnt/iad-ad-3-fss/fpsync_prototype/tmp -vvvv -n 30 -f 900   -o "-lptgoD -v --numeric-ids -e \\\"ssh -i /home/opc/.ssh/gg_id_rsa \\\" "  /mnt/iad-ad-3-fss/linux_src_code/  opc@172.16.1.3:/mnt/nfsshare/dst_linux_src_code/

if [ "$fpsync" = "true" -o "$posix_all_tools" = "true" ]; then
  worker_list=""
  for worker in `less /home/opc/worker_nodes.txt`
  do
    echo $worker
    worker_list+=" -w $worker "
  done
  echo "worker list: $worker_list "
fi

if [ "$posix_2_posix" = "true" ]; then
  echo "# NOTE: Should be ran on one node only (eg: hpc-node-1) and it will spawn process on all worker nodes by itself. "  >> /home/opc/fpsync_migrate_command_to_run.txt
  echo "# time fpsync $worker_list  -d $fpsync_shared_fs_dir  -t  $fpsync_shared_fs_tmp_dir -vvvv -n $concurrent_sync_jobs -f $max_files_per_sync_job $rsync_options_all  $source_fs_directory_to_sync $destination_location "  >> /home/opc/fpsync_migrate_command_to_run.txt
fi


# rclone sample command
rclone_cmd="time rclone -vvvv sync  --progress --transfers 32  --s3-upload-concurrency 10 --s3-chunk-size 130Mi --log-file /home/opc/rclone.log "
rclone_migrate_sample_command="/home/opc/rclone_migrate_command_to_run.txt"
if [ "$os_2_os" = "true" ]; then
  rclone_src="${src_os_type}-${src_region}:${src_bucket_name}/"
  rclone_destination="${destination_os_type}-${destination_region}:${destination_bucket_name}/"
  echo "# ${rclone_cmd}  ${rclone_src} ${rclone_destination} " >> $rclone_migrate_sample_command
fi

if [ "$posix_2_os" = "true" ]; then
  rclone_destination="${destination_os_type}-${destination_region}:${destination_bucket_name}/"
  echo "# ${rclone_cmd}  $source_fs_directory_to_sync ${rclone_destination} " >> $rclone_migrate_sample_command
fi

if [ "$os_2_posix" = "true" ]; then
  rclone_src="${src_os_type}-${src_region}:${src_bucket_name}/"
  rclone_destination="$destination_fs_directory_to_sync"
  echo "# ${rclone_cmd} ${rclone_src} ${rclone_destination} " >> $rclone_migrate_sample_command
fi


# s5cmd sample command
# similarly there is a cp command, you can see the docs:  https://github.com/peak/s5cmd
if [ "$destination_os_type" = "gcs" ]; then
  destination_endpoint="storage.googleapis.com"
  # no need to pass - it will auto detect
  destination_region="auto"
fi
if [ "$src_os_type" = "gcs" ]; then
  src_endpoint="storage.googleapis.com"
  # no need to pass - it will auto detect
  src_region="auto"
fi

s5cmd_cmd_p1="time /home/opc/go/bin/s5cmd -numworkers 32  "
s5cmd_cmd_p2=" --endpoint-url https://${destination_endpoint} "
s5cmd_cmd_p3=" sync  --concurrency 10   --part-size 130  "
s5cmd_migrate_sample_command="/home/opc/s5cmd_migrate_command_to_run.txt"
# Have to be from same region of same cloud provider. So sync/cp from one bucket to another. Limitation of s5cmd
if [ "$os_2_os" = "true" ]; then
  # Have to be from same region of same cloud provider.
  s5cmd_src="s3://${src_bucket_name}/"
  s5cmd_cmd_p2=" --endpoint-url https://${destination_endpoint} "
  s5cmd_destination="s3://${destination_bucket_name}/"
  echo "# ${s5cmd_cmd_p1} ${s5cmd_cmd_p2} ${s5cmd_cmd_p3} ${s5cmd_src} ${s5cmd_destination} " >> $s5cmd_migrate_sample_command
fi

if [ "$posix_2_os" = "true" ]; then
  s5cmd_cmd_p2=" --endpoint-url https://${destination_endpoint} "
  s5cmd_destination="s3://${destination_bucket_name}/"
  echo "# ${s5cmd_cmd_p1} ${s5cmd_cmd_p2} ${s5cmd_cmd_p3}  $source_fs_directory_to_sync ${s5cmd_destination} " >> $s5cmd_migrate_sample_command
fi

if [ "$os_2_posix" = "true" ]; then
  s5cmd_src="s3://${src_bucket_name}/*"
  s5cmd_cmd_p2=" --endpoint-url https://${src_endpoint} "
  s5cmd_destination="$destination_fs_directory_to_sync"
  echo "# ${s5cmd_cmd_p1} ${s5cmd_cmd_p2} ${s5cmd_cmd_p3}  ${s5cmd_src} ${s5cmd_destination} " >> $s5cmd_migrate_sample_command
fi


# oci cli command
# An Instance Principal needs to be created using Dynamic Group (DG) and a policy to give permission to this instance (i.e DG) to use Object Storage service.  You can create it using OCI Web Console, SDK, etc.  Once created, you can come back and run the command generated below.
# Refer to this doc for all parameters for sync: https://docs.oracle.com/en-us/iaas/tools/oci-cli/3.0.2/oci_cli_docs/cmdref/os/object/sync.html#examples
# Refer to this doc for all parameters for bulk copy: https://github.com/oracle/oci-python-sdk/tree/master/examples/object_storage
oci_cli_sync_cmd="time oci --auth instance_principal os object sync --bucket-name  "
# Optional:  --storage-tier InfrequentAccess
# --src-dir  xxx ,  oci -d  for debug
oci_cli_migrate_sample_command="/home/opc/oci_cli_migrate_command_to_run.txt"
if [ "$os_2_os" = "true" ]; then
  cd /home/opc
  wget https://raw.githubusercontent.com/oracle/oci-python-sdk/master/examples/object_storage/object_storage_bulk_copy.py
  oci_cli_bulk_copy_cmd="time python3 object_storage_bulk_copy.py -ip <see documentation for other parameters:  https://github.com/oracle/oci-python-sdk/tree/master/examples/object_storage > "
  echo "# Use Bulk Copy for Cross region or same region - copy (not sync) of same cloud provider. " >> $oci_cli_migrate_sample_command
  echo "# ${oci_cli_bulk_copy_cmd} "  >> $oci_cli_migrate_sample_command
fi

if [ "$posix_2_os" = "true" ]; then
  echo "# See documentation for all parameters: https://docs.oracle.com/en-us/iaas/tools/oci-cli/3.0.2/oci_cli_docs/cmdref/os/object/sync.html#examples  " >> $oci_cli_migrate_sample_command
  echo "# ${oci_cli_sync_cmd} ${destination_bucket_name} --prefix prefix1/prefix2/  --src-dir $source_fs_directory_to_sync  " >> $oci_cli_migrate_sample_command
fi

if [ "$os_2_posix" = "true" ]; then
  echo "# See documentation for all parameters: https://docs.oracle.com/en-us/iaas/tools/oci-cli/3.0.2/oci_cli_docs/cmdref/os/object/sync.html#examples  " >> $oci_cli_migrate_sample_command
  echo "# ${oci_cli_sync_cmd} ${src_bucket_name} --prefix prefix1/prefix2/  --dest-dir $destination_fs_directory_to_sync  " >> $oci_cli_migrate_sample_command
fi


# OCI Parallel File Transfer Tools
# sample command
if [ "$posix_2_posix" = "true" ]; then
  # cd /mnt/FileSystem-20190326-2041/ebs/R12/LAB ; time partar pcf - apps -P 32|ssh applmgr@11.0.1.4 "cd /mnt/fss/ebs/R12/LABCLN3; partar pxf - -P 32"
  echo "# See documentation for all command (partar, parcp, parrm) and parameters:  https://docs.oracle.com/en-us/iaas/Content/File/Tasks/using_file_storage_parallel_tools.htm " >> /home/opc/oci_partar_migrate_command_to_run.txt
  echo "# time partar pcf - $source_fs_directory_to_sync -P 32|${ssh_with_key} ${destination_host_with_user} \"cd ${destination_fs_directory_to_sync}; partar pxf - -P 32\" " >> /home/opc/oci_partar_migrate_command_to_run.txt
fi


